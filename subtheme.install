<?php
/**
 * @file subtheme.install
 */

/**
 * Implements hook_schema().
 */
function subtheme_schema() {
  $schema['subtheme_subtheme'] = array(
    'description' => 'Table storing subtheme (myobj), definitions.',
    'export' => array(
      'key' => 'name',
      'key name' => 'Name',
      'primary key' => 'sid',
      'identifier' => 'subtheme', // Exports will be as $selector
      'default hook' => 'default_subtheme_subtheme', // Function hook name.
      'api' => array(
        'owner' => 'subtheme',
        'api' => 'default_subtheme_subtheme', // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      // selector id
      'sid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary ID field for the table. Not used for anything except internal lookups.',
        'no export' => TRUE, // Do not export database-only keys.
      ),
      // name (machine, unique id)
      'name' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Unique ID for this object. Used to identify it programmatically.',
      ),
      // title (human readable)
      'title' => array(
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Human readable title.',
      ),
      // description
      'description' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Optional description of selector.',
      ),
      'selectors' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A serialized array of mtheme selectors included in each subtheme.',
        'serialize' => TRUE,
        'serialized default' => 'a:0:{}',
      ),
      'grps' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'A serialized array of groups, to organize selectors.',
        'serialize' => TRUE,
        'serialized default' => 'a:0:{}',
      ),
      'custom_css' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Custom CSS. These selectors are created by the end-user, ',
        'not null' => TRUE,
      ),
      'logo_path' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Logo path',
      ),
      'is_active' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => '0 not active. 1 active.',
      ),
    ),
    'primary key' => array('sid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}

/**
 * Implements hook_update_N().
 *
 * Add logo_path field.
 */
function subtheme_update_6001() {
  $table = 'subtheme_subtheme';
  $field = 'logo_path';
  $spec = array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => 'Logo path',
  );
  db_add_field($table, $field, $spec, $keys_new = array());
}
